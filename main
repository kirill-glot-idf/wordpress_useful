GATSBY

  const checkFile = (event) => {

    let file = event.target.files[0]

    //TODO set filetype and filesize

    // if (!["image/jpeg", "image/png", "image/gif", "image/svg+xml"].includes(file.type)) {
    //   alert("Разрешены только изображения.");
    //   return;
    // }

    // 2mb
    if (file.size > 10 * 1024 * 1024) {
      alert("Файл должен быть менее 10 МБ.");
      return;
    }

    setFilename(fileInput.current.value.replace(/^.*[\\\/]/, ""))
  };
  const removeFile = () => {
    fileInput.current.value = "";
    setFilename(null);
  };

const checkPhone = (event) => {
	event.preventDefault();
	event.target.value = event.target.value.replace(/[^0-9()+\-)]/g, '');
}


  const checkForm = (event) => {
    event.preventDefault();

    let elements = Array.from(mainForm.current.elements).filter(item => item.dataset.req === "true");
    if (elements.length < 1) {
      return false;
    }

    let isAllChecked = true;

    for (let element of elements) {
      switch (element.name) {
        case "name":
          if (element.value.length > 1) {
            element.parentNode.dataset.checked = true;
          } else {
            element.parentNode.dataset.checked = false;
            isAllChecked = false;
          }
          break;
        case "phone":
          if (element.value.length > 6 && element.value.length < 20) {
            element.parentNode.dataset.checked = true;
          } else {
            element.parentNode.dataset.checked = false;
            isAllChecked = false;
          }
          break;
        case "message":
          if (element.value.length > 3) {
            element.parentNode.dataset.checked = true;
          } else {
            element.parentNode.dataset.checked = false;
            isAllChecked = false;
          }
          break;
      }
    }
    setIsButtonDisabled(!isAllChecked);

  };
  const sendForm = async (event) => {
    event.preventDefault();

    let formData = new FormData(event.target);

    setIsButtonDisabled(true);

    fetch(senderUrl, {
      method: "post",
      body: formData,
    }).then(response => {
      console.log(response.status);
      mailSended(true);
      setAlertDone(true);
    }).catch(err => {
      console.log(err);
      setAlertDone(false);
    })

    setIsButtonDisabled(false);
  };

$term_id  = wp_get_post_terms($id, 'instrument', array("fields" => "ids"))[0];

<? echo wp_get_attachment_image( 77 , 'full', "", array( "class" => "" )); ?>

для телефона
<?= preg_replace('/[^\d+]/', '', get_field('whatsapp_link', 28)); ?>

<a href="tel:+<?= preg_replace('~\D+~', '', get_field('need_lift_phone', $id)); ?>" class="h1_title">
<?= get_field('need_lift_phone', $id); ?>
</a>

// Обрезка контента с html тегами
$more = ' <a href="'. get_permalink( get_the_ID() ) . '" style="font-weight: bold; color: #ff5253;">Читать полностью</a>';
echo force_balance_tags( html_entity_decode( wp_trim_words( htmlentities( get_the_content() ), 200, $more ) ) );

//ЗАМЕНА СИМВОЛОВ
$title = str_replace( ' ', '_', get_the_title($post_id) );




//выборка по кастомным категориям 
$query = new WP_Query( $args );
        $query = new WP_Query(array(
        'posts_per_page' => $offset + 1,
        'post_type' => $post_type,
        'post_status' => 'publish',
        'tax_query' => [
          'relation' => 'AND',
          [
            'taxonomy' => 'zapchasti_category',
            'field' => 'slug',
            'terms' => array('category_archive'), <--какую категорию не включать
            'operator' => 'NOT IN',
          ],
          [
            'taxonomy' => 'zapchasti_category',
            'field' => 'slug',
            'terms' => array($post_slug),<--какую категорию включать
            'operator' => 'IN',
          ],
        ]
      ));
  
  





//аякс добавление товара в корзину
add_filter('woocommerce_add_to_cart_fragments', 'add_to_cart_refresh');
function add_to_cart_refresh($fragments)
{
  global $woocommerce;
  $fragments['.cart_count'] = '<div class="cart_count">' . $woocommerce->cart->cart_contents_count . '</div>';
  return $fragments;
}

add_filter( 'woocommerce_add_to_cart_fragments', 'misha_add_to_cart_fragment' );

function misha_add_to_cart_fragment( $fragments ) {

  global $woocommerce;

  $fragments['.cart_count'] = '<div class="cart_count">' . $woocommerce->cart->cart_contents_count . '</div>';
  return $fragments;

}
 
  
//вывод по произвольным полям
https://misha.blog/wordpress/meta_query.html
https://developer.wordpress.org/reference/classes/wp_query/#order-orderby-parameters


  
  



  
//git
git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/KirylHlot/wordpress_starter_pack.git
git push --set-upstream origin master



//Группа
<?
	$field=get_field('q_and_a');
	if( $field ):  ?>
		<a href="<? echo $field['four_screen_4']['url']?>" data-fancybox>
			<img src="<? echo $field['four_screen_4']['url']?>" alt="<? echo $field['four_screen_4']['url']?>" />
		</a>
		<div class="content">
			<? echo $field['answer_1']?>
		</div>
		<?
	endif;
?>

//Повторитель
  <? if (have_rows('right_carousel', $page_id)) { ?>
  <? while (have_rows('right_carousel', $page_id)) {
    the_row(); ?>
    <?= get_sub_field('name'); ?>
    
    <a href="<? ?>" data-fancybox="galary" style="background-image: url(<? ?>)"></a>
    
  <? } ?>
<? 
reset_rows();
}
?>


      <?
      $query = new WP_Query(array(
        'posts_per_page' => 2,
        'category_name' => 'akcii',
        'post_status' => 'publish'
      ));
      $counter = 0;
      while ($query->have_posts() and $counter < 2) {
        $query->the_post();
        posrPreviewItem(get_the_ID(), 250);
        $counter++;
      };
      wp_reset_postdata();
      ?>



//Гибкое содержание
<?	
	if( have_rows('main_page_galary') ):
		while ( have_rows(menu_number_list) ) : the_row();
			if( get_row_layout() == 'item_list' ):
			  ?> 
				<div class="item_pretitle"><? the_sub_field('pretitle'); ?></div>
			  <?
			endif;
		endwhile;
	else :
	endif;
?>	

//CHECKBOXES with foreach
<?
	$choised_country = 'country';
	$avalible_country_mass = get_field('avalible_country');

	if(isset($avalible_country_mass) and !empty($avalible_country_mass)){
		foreach ($avalible_country_mass as $k => $j){
			if($j === $choised_country){
				$avalible = true;
			}
		}
	}
?>

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Куски кода///////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////header с yoast
<!DOCTYPE HTML>
<html <?php language_attributes(); ?>>

<head>
  <meta charset="<?php bloginfo( 'charset' ); ?>">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <link rel="icon" href="<?echo get_template_directory_uri();?>/assets/img/favicon/favicon.png">
  <meta name="theme-color" content="#161930">
  <meta property="og:image" content="
    <?
      $lit_logo = get_field('lit_logo', 49);
      echo $lit_logo['url'];
    ?>
  ">
	<?php wp_head(); ?>
  <?$page_id = get_the_ID();
    $template_name = get_post_meta( $page_id, '_wp_page_template', true );
  ?>
</head>


////Вывод по категориям
<?
	$query = new WP_Query( array( 'category_name' => 'casinos' ) );
	$counter = 0;
	while ( $query->have_posts() and $counter < 5 ) {
		$query->the_post();
			?>
				//content
			<?
			$counter ++;
		wp_reset_postdata();
	};
?>

//WPDB out file
<?
global $wpdb;
if(!isset($wpdb))
{
    require_once('../../../wp-config.php');
    require_once('../../../wp-includes/wp-db.php');
}
$wpdb->insert(
    'wp_postmeta', // указываем таблицу
    array(
        'post_id' => 666,
        'meta_key' => 'text_ajax 1',
        'meta_value' => 'ajax value 4'
    ),
    array('%d', '%s', '%s')
);

//фэнси бокс
<a href="<? echo $field['four_screen_4']['url']?>" data-fancybox>
  <img src="<? echo $field['four_screen_4']['url']?>" alt="<? echo $field['four_screen_4']['url']?>" />
</a>

//пагинация
//WP-PageNavi
<?php
  $current_page = (get_query_var('paged')) ? get_query_var('paged') : 1;
  $params = array(
    'posts_per_page' => 1, // количество постов на странице
    'category_name'       => 'video', // тип постов
    'paged'           => $current_page // текущая страница
  );
  query_posts($params);

  $wp_query->is_archive = true;
  $wp_query->is_home = false;

  while(have_posts()): the_post();
  ?>
	//код здесь
  <?
  endwhile;?>
  //пагинация здесь
<?wp_pagenavi();?>


//к сайтхистори классу(прикреплен к репозиторию дополнительно)
function get_site_history( $item_id ) {

	$key    = strtolower( get_the_title( $item_id ) );
	$object = SitesHistory::getInstance()->getSiteHistory( $key );

	return $object;
}


/////hex2rgba
function hex2rgba($color, $opacity = false) {

	$default = 'rgb(0,0,0)';

	//Return default if no color provided
	if(empty($color))
		return $default;

	//Sanitize $color if "#" is provided
	if ($color[0] == '#' ) {
		$color = substr( $color, 1 );
	}

	//Check if color has 6 or 3 characters and get values
	if (strlen($color) == 6) {
		$hex = array( $color[0] . $color[1], $color[2] . $color[3], $color[4] . $color[5] );
	} elseif ( strlen( $color ) == 3 ) {
		$hex = array( $color[0] . $color[0], $color[1] . $color[1], $color[2] . $color[2] );
	} else {
		return $default;
	}

	//Convert hexadec to rgb
	$rgb =  array_map('hexdec', $hex);

	//Check if opacity is set(rgba or rgb)
	if($opacity){
		if(abs($opacity) > 1)
			$opacity = 1.0;
		$output = 'rgba('.implode(",",$rgb).','.$opacity.')';
	} else {
		$output = 'rgb('.implode(",",$rgb).')';
	}

	//Return rgb(a) color string
	return $output;
}

//////////////////////////////////////////////////////////////////////////////////////jsons
//////////////////////////////////////////////////////////////////////////////////////jsons
//in functions.php
function get_avalible_countrys_data( $post_id ) {

	$title = str_replace( ' ', '_', get_the_title($post_id) );

	if ( get_field( 'avalible_country', $post_id ) ) {
		$avalible_country = get_field( 'avalible_country', $post_id );
		$license_data['avalible_country'] = $avalible_country;
	}

	if ( get_field( 'licenses', $post_id ) ) {
		$avalible_licenses = get_field( 'licenses', $post_id );
		$license_data['avalible_licenses'] = $avalible_licenses;
	}

	$countries_settings = [];

	$countries_settings['avalible_country']= $avalible_country;
	$countries_settings['avalible_licenses']= $avalible_licenses;


	saveProviderInfo( $countries_settings, $title );
}


function saveProviderInfo( $data, $title ) {
	$dirname  = __DIR__ . '/jsons';
	$filename = $dirname . '/' . $title . '.json';

	if (is_file($filename)) {
		$diff = time() - filemtime($filename);

		if ($diff < 3600) {
			return false;
		}
	}


	! is_writable( $dirname )
	and mkdir( $dirname, 0777 );

	$json_data = json_encode( $data );
	file_put_contents( $filename, $json_data );
}


//in js
async function get_json(selected_country) {
  let casino_title = document.getElementById('alert_wrapper').dataset.casino_title;
  var myObject;
  var xhr = new XMLHttpRequest();
  xhr.open('GET', '/wp-content/themes/casino-login/jsons/'+ casino_title +'.json', true);
  xhr.send(); // (1)

  xhr.onreadystatechange = function() {
    if (xhr.readyState != 4) return;
    if (xhr.status != 200) {
      console.log(xhr.status + ': ' + xhr.statusText);
    } else {
      test = 'fd'
      myObject = JSON.parse(xhr.responseText);
      alert(xhr.responseText)
      compare_avalibale_countries(myObject['avalible_country'], myObject['avalible_licenses'], selected_country)
    }
  };

}

//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Дефолтные functions.php//////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//reset defaults includes
//////////////////////////////
remove_action( 'wp_head', 'feed_links_extra', 3 ); // Display the links to the extra feeds such as category feeds
remove_action( 'wp_head', 'feed_links', 2 ); // Display the links to the general feeds: Post and Comment Feed
remove_action( 'wp_head', 'rsd_link' ); // Display the link to the Really Simple Discovery service endpoint, EditURI link
remove_action( 'wp_head', 'wlwmanifest_link' ); // Display the link to the Windows Live Writer manifest file.
remove_action( 'wp_head', 'index_rel_link' ); // index link
remove_action( 'wp_head', 'parent_post_rel_link', 10 ); // prev link
remove_action( 'wp_head', 'start_post_rel_link', 10 ); // start link
remove_action( 'wp_head', 'adjacent_posts_rel_link', 10 ); // Display relational links for the posts adjacent to the current post.
remove_action( 'wp_head', 'wp_generator' ); // Display the XHTML generator that is generated on the wp_head hook, WP version
remove_action('wp_head', 'print_emoji_detection_script', 7);
remove_action('wp_print_styles', 'print_emoji_styles');
remove_action( 'admin_print_scripts', 'print_emoji_detection_script' );
remove_action( 'admin_print_styles', 'print_emoji_styles' );
remove_action( 'wp_head', 'wp_resource_hints', 2 );
add_action( 'template_redirect', function () {
  add_filter( 'show_recent_comments_widget_style', function() { return false; });
  if ( ! class_exists( 'WPSEO_Frontend' ) ) {
    return;
  }
  $instance = WPSEO_Frontend::get_instance();
  // make sure, future version of the plugin does not break our site.
  if ( ! method_exists( $instance, 'debug_mark') ) {
    return ;
  }
  // ok, let us remove the love letter.
  remove_action( 'wpseo_head', array( $instance, 'debug_mark' ), 2 );
}, 9999 );

function disable_yoast_schema_data($data){
  $data = array();
  return $data;
}
add_filter('wpseo_json_ld_output', 'disable_yoast_schema_data', 10, 1);
function my_deregister_scripts(){
  wp_deregister_script( 'wp-embed' );
}
add_action( 'wp_footer', 'my_deregister_scripts' );
//rest API
if( 'Disable REST API' ){

  // Отключаем сам REST API
  add_filter( 'rest_enabled', '__return_false' );

  // Отключаем фильтры REST API
  remove_action( 'xmlrpc_rsd_apis',            'rest_output_rsd' );
  remove_action( 'wp_head',                    'rest_output_link_wp_head', 10 );
  remove_action( 'template_redirect',          'rest_output_link_header', 11 );
  remove_action( 'auth_cookie_malformed',      'rest_cookie_collect_status' );
  remove_action( 'auth_cookie_expired',        'rest_cookie_collect_status' );
  remove_action( 'auth_cookie_bad_username',   'rest_cookie_collect_status' );
  remove_action( 'auth_cookie_bad_hash',       'rest_cookie_collect_status' );
  remove_action( 'auth_cookie_valid',          'rest_cookie_collect_status' );
  remove_filter( 'rest_authentication_errors', 'rest_cookie_check_errors', 100 );

  // Отключаем события REST API
  remove_action( 'init',          'rest_api_init' );
  remove_action( 'rest_api_init', 'rest_api_default_filters', 10 );
  remove_action( 'parse_request', 'rest_api_loaded' );

  // Отключаем Embeds связанные с REST API
  remove_action( 'rest_api_init',          'wp_oembed_register_route'              );
  remove_filter( 'rest_pre_serve_request', '_oembed_rest_pre_serve_request', 10 );

  remove_action( 'wp_head', 'wp_oembed_add_discovery_links' );
  // если собираетесь выводить вставки из других сайтов на своем, то закомментируйте след. строку.
  remove_action( 'wp_head', 'wp_oembed_add_host_js' );

}

//Disable gutenberg style in Front
function wps_deregister_styles() {
  wp_dequeue_style( 'wp-block-library' );
}
add_action( 'wp_print_styles', 'wps_deregister_styles', 100 );

//уберет p в форме
add_filter('wpcf7_autop_or_not', '__return_false'); 
//////////////////////////////////////////
//////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


af : Afghanistan
ax : Aland Islands
al : Albania
dz : Algeria
as : American Samoa
ad : Andorra
ao : Angola
ai : Anguilla
aq : Antarctica
ag : Antigua and Barbuda
ar : Argentina
am : Armenia
aw : Aruba
au : Australia
at : Austria
az : Azerbaijan
bs : Bahamas
bh : Bahrain
bd : Bangladesh
bb : Barbados
by : Belarus
be : Belgium
bz : Belize
bj : Benin
bm : Bermuda
bt : Bhutan
bo : Bolivia
bq : Bonaire
ba : Bosnia and Herzegovina
bw : Botswana
bv : Bouvet Island
br : Brazil
io : British Indian Ocean Territory
bn : Brunei Darussalam
bg : Bulgaria
bf : Burkina Faso
bi : Burundi
cv : Cabo Verde
kh : Cambodia
cm : Cameroon
ca : Canada
ky : Cayman Islands
cf : Central African Republic
td : Chad
cl : Chile
cn : China
cx : Christmas Island
cc : Cocos Islands
co : Colombia
km : Comoros
cg : Congo
cd : Congo
ck : Cook Islands
cr : Costa Rica
ci : Côte d Ivoire
hr : Croatia
cu : Cuba
cw : Curaçao
cy : Cyprus
cz : Czechia
dk : Denmark
dj : Djibouti
dm : Dominica
do : Dominican Republic
ec : Ecuador
eg : Egypt
sv : El Salvador
gq : Equatorial Guinea
er : Eritrea
ee : Estonia
sz : Eswatini
et : Ethiopia
fk : Falkland Islands
fo : Faroe Islands
fj : Fiji
fi : Finland
fr : France
gf : French Guiana
pf : French Polynesia
tf : French Southern Territories
ga : Gabon
gm : Gambia
ge : Georgia
de : Germany
gh : Ghana
gi : Gibraltar
gr : Greece
gl : Greenland
gd : Grenada
gp : Guadeloupe
gu : Guam
gt : Guatemala
gg : Guernsey
gn : Guinea
gw : Guinea-Bissau
gy : Guyana
ht : Haiti
hm : Heard Island and McDonald Islands
va : Holy See
hn : Honduras
hk : Hong Kong
hu : Hungary
is : Iceland
in : India
id : Indonesia
ir : Iran
iq : Iraq
ie : Ireland
im : Isle of Man
il : Israel
it : Italy
jm : Jamaica
jp : Japan
je : Jersey
jo : Jordan
kz : Kazakhstan
ke : Kenya
ki : Kiribati
kp : North Korea
kr : South
kw : Kuwait
kg : Kyrgyzstan
la : Lao
lv : Latvia
lb : Lebanon
ls : Lesotho
lr : Liberia
ly : Libya
li : Liechtenstein
lt : Lithuania
lu : Luxembourg
mo : Macao
mg : Madagascar
mw : Malawi
my : Malaysia
mv : Maldives
ml : Mali
mt : Malta
mh : Marshall Islands
mq : Martinique
mr : Mauritania
mu : Mauritius
yt : Mayotte
mx : Mexico
fm : Micronesia
md : Moldova
mc : Monaco
mn : Mongolia
me : Montenegro
ms : Montserrat
ma : Morocco
mz : Mozambique
mm : Myanmar
na : Namibia
nr : Nauru
np : Nepal
nl : Netherlands
nc : New Caledonia
nz : New Zealand
ni : Nicaragua
ne : Niger
ng : Nigeria
nu : Niue
nf : Norfolk Island
mk : North Macedonia
mp : Northern Mariana Islands
no : Norway
om : Oman
pk : Pakistan
pw : Palau
ps : Palestine
pa : Panama
pg : Papua New Guinea
py : Paraguay
pe : Peru
ph : Philippines
pn : Pitcairn
pl : Poland
pt : Portugal
pr : Puerto Rico
qa : Qatar
re : Reunion
ro : Romania
ru : Russian Federation
rw : Rwanda
bl : Saint Barthelemy
sh : Saint Helena
kn : Saint Kitts and Nevis
lc : Saint Lucia
mf : Saint Martin FP
pm : Saint Pierre and Miquelon
vc : Saint Vincent and the Grenadines
ws : Samoa
sm : San Marino
st : Sao Tome and Principe
sa : Saudi Arabia
sn : Senegal
rs : Serbia
sc : Seychelles
sl : Sierra Leone
sg : Singapore
sx : Sint Maarten DP
sk : Slovakia
si : Slovenia
sb : Solomon Islands
so : Somalia
za : South Africa
gs : South Georgia and the South Sandwich Islands
ss : South Sudan
es : Spain
lk : Sri Lanka
sd : Sudan
sr : Suriname
sj : Svalbard and Jan Mayen
se : Sweden
ch : Switzerland
sy : Syrian Arab Republic
tw : Taiwan
tj : Tajikistan
tz : Tanzania
th : Thailand
tl : Timor-Leste
tg : Togo
tk : Tokelau
to : Tonga
tt : Trinidad and Tobago
tn : Tunisia
tr : Turkey
tm : Turkmenistan
tc : Turks and Caicos Islands
tv : Tuvalu
ug : Uganda
ua : Ukraine
ae : United Arab Emirates
gb : United Kingdom
um : United States Minor Outlying Islands
us : USA
uy : Uruguay
uz : Uzbekistan
vu : Vanuatu
ve : Venezuela
vn : Viet Nam
vg : Virgin Islands British
vi : Virgin Islands US
wf : Wallis and Futuna
eh : Western Sahara
ye : Yemen
zm : Zambia
zw : Zimbabwe

https://select2.org/
https://flag-icon-css.lip.is/

getCountryTitle();
let userCountry = {id: '', text: ''},
    defaultCountry = userCountry.id !== '' ? {id: userCountry.id, text: userCountry.text} : {
	id: 'gb',
	text: 'United Kingdom'
    };

var isoCountries = [
    defaultCountry,
    {id: 'de', text: 'Germany'},
    {id: 'at', text: 'Austria'},
    {id: 'no', text: 'Norway'},
    {id: 'se', text: 'Sweden'},
    {id: 'fi', text: 'Finland'},
    {id: 'dk', text: 'Denmark'},
];

// (function setDefaultCountry(){
//     if (getCookie('region') === 'undefined' ) {
//         document.cookie = 'region=' + defaultCountry.id + '; path=/';
//     }
// })();


countrySelect();

function countrySelect() {

    function formatCountry(country) {
	if (!country.id) {
	    return country.text;
	}
	var $country = $(
	    '<span class="flag-icon flag-icon-squared flag-icon-' + country.id.toLowerCase() + '"></span>' +
	    '<span class="flag-text">' + country.text + "</span>"
	);
	return $country;
    };


    $(".search-select").select2({
	placeholder: "Select a country",
	templateSelection: formatCountry,
	templateResult: formatCountry,
	data: isoCountries
    });
};
	
<form action="">
	<select name="country" class="search-select">
	</select>
</form>

//убирает jquery по умолчанию
wp_deregister_script( 'jquery' );

//ошибка в аудите
//Ensure text remains visible during webfont load
добавить
@font-face {
  font-display: swap;
}

// автолэйбл дотсам
let $dots = $('.owl-dot');
$dots.attr('aria-label', 'owl carousel')

//socline

      <li class="skype">
        <a href="skype:<?= get_field('ic_skype') ?>?chat"><? the_skype_icon(); ?></a>
      </li>
      <li class="instagram">
        <a href="<?= get_field('ic_inst') ?>"><? the_instagram_icon(); ?></a>
      </li>
      <li class="telegram">
        <a href="tg://resolve?domain=<?= get_field('ic_telegram'); ?>"><? the_telegram_icon(); ?></a>
      </li>
      <li class="vk">
        <a href="<?= get_field('ic_vk'); ?>>"><? the_vk_icon(); ?></a>
      </li>
      <li class="viber">
        <a title="Viber"
           href="viber://chat?number=<?= preg_replace('/[^\d+]/', '', get_field('ic_viber')); ?>"
           target="_blank" rel="nofollow noopener">
	        <? the_viber_icon(); ?>
        </a>
        <a title="Viber" class="viber_mobi"
           href="viber://add?number=<?= preg_replace('/[^\d]/', '', get_field('ic_viber')); ?>"
           target="_blank" rel="nofollow noopener">
		      <? the_viber_icon(); ?>
        </a>
      </li>
            <a href="<?= get_field('insta_link', 28); ?>" target="_blank" rel="nofollow noopener">
              <? the_instagram_icon(); ?>
            </a>

            <a href="<?= get_field('vk_link', 28); ?>" target="_blank" rel="nofollow noopener">
              <? the_vk_icon(); ?>
            </a>

            <a title="Viber" class="viber_desc"
               href="viber://chat?number=<?= preg_replace('/[^\d+]/', '', get_field('viber_link', 28)); ?>"
               target="_blank" rel="nofollow noopener">
              <? the_viber_icon(); ?>
            </a>

            <a title="Viber" class="viber_mobi"
               href="viber://add?number=<?= preg_replace('/[^\d]/', '', get_field('viber_link', 28)); ?>"
               target="_blank" rel="nofollow noopener">
              <? the_viber_icon(); ?>
            </a>

            <a href="<?= get_field('fb_link', 28); ?>" target="_blank" rel="nofollow noopener">
              <? the_fb_icon(); ?>
            </a>

            <a href="<?= get_field('bechance_link', 28); ?>" target="_blank" rel="nofollow noopener">
              <? the_behince_icon(); ?>
            </a>

            <a href="<?= get_field('linked_link', 28); ?>" target="_blank" rel="nofollow noopener">
              <? the_linked_icon(); ?>
            </a>

            <a href="<?= get_field('ddd_link', 28); ?>" target="_blank" rel="nofollow noopener">
              <? the_3ddd_icon(); ?>
            </a>

            <a href="<?= get_field('pinterest_link', 28); ?>" target="_blank" rel="nofollow noopener">
              <? the_pinterest_icon(); ?>
            </a>
